2024-12-10 06:31:40 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-12-10 06:31:40 - Initializing Servlet 'dispatcherServlet'
2024-12-10 06:31:40 - Completed initialization in 1 ms
2024-12-10 06:31:40 - Handling error response: statusCode: 401, message: JWT token has expired: Error extracting claims from the token
2024-12-10 06:32:27 - Handling error response: statusCode: 401, message: JWT token has expired: Error extracting claims from the token
2024-12-10 06:36:25 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-12-10 06:36:25 - HikariPool-1 - Shutdown initiated...
2024-12-10 06:36:25 - HikariPool-1 - Shutdown completed.
2024-12-10 06:37:05 - HV000001: Hibernate Validator 8.0.1.Final
2024-12-10 06:37:05 - Starting PostgresApplication v0.0.1 using Java 21 with PID 1 (/app/app.jar started by root in /app)
2024-12-10 06:37:05 - The following 1 profile is active: "prod"
2024-12-10 06:37:07 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-12-10 06:37:07 - Finished Spring Data repository scanning in 59 ms. Found 4 JPA repository interfaces.
2024-12-10 06:37:08 - Tomcat initialized with port 9012 (https)
2024-12-10 06:37:08 - Initializing ProtocolHandler ["https-jsse-nio-9012"]
2024-12-10 06:37:08 - Starting service [Tomcat]
2024-12-10 06:37:08 - Starting Servlet engine: [Apache Tomcat/10.1.28]
2024-12-10 06:37:08 - Initializing Spring embedded WebApplicationContext
2024-12-10 06:37:08 - Root WebApplicationContext: initialization completed in 2087 ms
2024-12-10 06:37:08 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-12-10 06:37:08 - HHH000412: Hibernate ORM core version 6.1.6.Final
2024-12-10 06:37:08 - HHH90000021: Encountered deprecated setting [javax.persistence.sharedCache.mode], use [jakarta.persistence.sharedCache.mode] instead
2024-12-10 06:37:08 - HikariPool-1 - Starting...
2024-12-10 06:37:08 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@10b67f54
2024-12-10 06:37:08 - HikariPool-1 - Start completed.
2024-12-10 06:37:08 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2024-12-10 06:37:10 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-12-10 06:37:10 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-12-10 06:37:11 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-12-10 06:37:11 - Starting ProtocolHandler ["https-jsse-nio-9012"]
2024-12-10 06:37:11 - Connector [https-jsse-nio-9012], TLS virtual host [_default_], certificate type [UNDEFINED] configured from keystore [/root/.keystore] using alias [tomcat] with trust store [null]
2024-12-10 06:37:11 - Tomcat started on port 9012 (https) with context path '/'
2024-12-10 06:37:11 - Started PostgresApplication in 6.871 seconds (process running for 8.024)
2024-12-10 06:42:02 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-12-10 06:42:02 - Initializing Servlet 'dispatcherServlet'
2024-12-10 06:42:02 - Completed initialization in 1 ms
2024-12-10 06:42:02 - Handling error response: statusCode: 401, message: JWT token has expired: Error extracting claims from the token
2024-12-10 06:48:45 - Handling error response: statusCode: 401, message: JWT token has expired: Error extracting claims from the token
2024-12-10 07:04:23 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-12-10 07:04:23 - HikariPool-1 - Shutdown initiated...
2024-12-10 07:04:23 - HikariPool-1 - Shutdown completed.
2024-12-10 07:26:12 - HV000001: Hibernate Validator 8.0.1.Final
2024-12-10 07:26:12 - Starting PostgresApplication v0.0.1 using Java 21 with PID 1 (/app/app.jar started by root in /app)
2024-12-10 07:26:12 - The following 1 profile is active: "prod"
2024-12-10 07:26:13 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-12-10 07:26:13 - Finished Spring Data repository scanning in 96 ms. Found 4 JPA repository interfaces.
2024-12-10 07:26:14 - Tomcat initialized with port 9012 (https)
2024-12-10 07:26:14 - Initializing ProtocolHandler ["https-jsse-nio-9012"]
2024-12-10 07:26:14 - Starting service [Tomcat]
2024-12-10 07:26:14 - Starting Servlet engine: [Apache Tomcat/10.1.28]
2024-12-10 07:26:14 - Initializing Spring embedded WebApplicationContext
2024-12-10 07:26:14 - Root WebApplicationContext: initialization completed in 2078 ms
2024-12-10 07:26:15 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-12-10 07:26:15 - HHH000412: Hibernate ORM core version 6.1.6.Final
2024-12-10 07:26:15 - HHH90000021: Encountered deprecated setting [javax.persistence.sharedCache.mode], use [jakarta.persistence.sharedCache.mode] instead
2024-12-10 07:26:15 - HikariPool-1 - Starting...
2024-12-10 07:26:15 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@121ddca4
2024-12-10 07:26:15 - HikariPool-1 - Start completed.
2024-12-10 07:26:15 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2024-12-10 07:26:17 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-12-10 07:26:17 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-12-10 07:26:17 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-12-10 07:26:18 - Starting ProtocolHandler ["https-jsse-nio-9012"]
2024-12-10 07:26:18 - Connector [https-jsse-nio-9012], TLS virtual host [_default_], certificate type [UNDEFINED] configured from keystore [/root/.keystore] using alias [tomcat] with trust store [null]
2024-12-10 07:26:18 - Tomcat started on port 9012 (https) with context path '/'
2024-12-10 07:26:18 - Started PostgresApplication in 6.874 seconds (process running for 8.265)
2024-12-10 07:26:25 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-12-10 07:26:25 - Initializing Servlet 'dispatcherServlet'
2024-12-10 07:26:25 - Completed initialization in 0 ms
2024-12-10 07:26:46 - Handling error response: statusCode: 401, message: JWT token has expired: Error extracting claims from the token
2024-12-10 07:27:27 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-12-10 07:27:27 - HikariPool-1 - Shutdown initiated...
2024-12-10 07:27:27 - HikariPool-1 - Shutdown completed.
2024-12-10 07:33:14 - HV000001: Hibernate Validator 8.0.1.Final
2024-12-10 07:33:14 - Starting PostgresApplication v0.0.1 using Java 21 with PID 1 (/app/app.jar started by root in /app)
2024-12-10 07:33:14 - The following 1 profile is active: "prod"
2024-12-10 07:33:15 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-12-10 07:33:15 - Finished Spring Data repository scanning in 40 ms. Found 4 JPA repository interfaces.
2024-12-10 07:33:16 - Tomcat initialized with port 9012 (https)
2024-12-10 07:33:16 - Initializing ProtocolHandler ["https-jsse-nio-9012"]
2024-12-10 07:33:16 - Starting service [Tomcat]
2024-12-10 07:33:16 - Starting Servlet engine: [Apache Tomcat/10.1.28]
2024-12-10 07:33:16 - Initializing Spring embedded WebApplicationContext
2024-12-10 07:33:16 - Root WebApplicationContext: initialization completed in 1707 ms
2024-12-10 07:33:16 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-12-10 07:33:16 - HHH000412: Hibernate ORM core version 6.1.6.Final
2024-12-10 07:33:16 - HHH90000021: Encountered deprecated setting [javax.persistence.sharedCache.mode], use [jakarta.persistence.sharedCache.mode] instead
2024-12-10 07:33:16 - HikariPool-1 - Starting...
2024-12-10 07:33:17 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1752e45c
2024-12-10 07:33:17 - HikariPool-1 - Start completed.
2024-12-10 07:33:17 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2024-12-10 07:33:18 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-12-10 07:33:18 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-12-10 07:33:19 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-12-10 07:33:19 - Starting ProtocolHandler ["https-jsse-nio-9012"]
2024-12-10 07:33:19 - Connector [https-jsse-nio-9012], TLS virtual host [_default_], certificate type [UNDEFINED] configured from keystore [/root/.keystore] using alias [tomcat] with trust store [null]
2024-12-10 07:33:19 - Tomcat started on port 9012 (https) with context path '/'
2024-12-10 07:33:19 - Started PostgresApplication in 6.261 seconds (process running for 7.421)
2024-12-10 07:33:26 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-12-10 07:33:26 - Initializing Servlet 'dispatcherServlet'
2024-12-10 07:33:26 - Completed initialization in 1 ms
2024-12-10 07:33:38 - Handling error response: statusCode: 401, message: JWT token has expired: Error extracting claims from the token
2024-12-10 07:33:59 - Handling error response: statusCode: 401, message: JWT token has expired: Error extracting claims from the token
2024-12-10 07:35:37 - Handling error response: statusCode: 401, message: JWT token has expired: Error extracting claims from the token
2024-12-10 07:35:38 - Handling error response: statusCode: 401, message: JWT token has expired: Error extracting claims from the token
2024-12-10 07:35:38 - Handling error response: statusCode: 401, message: JWT token has expired: Error extracting claims from the token
2024-12-10 07:35:40 - Handling error response: statusCode: 401, message: JWT token has expired: Error extracting claims from the token
2024-12-10 07:36:33 - Handling error response: statusCode: 401, message: JWT token has expired: Error extracting claims from the token
2024-12-10 07:36:34 - Handling error response: statusCode: 401, message: JWT token has expired: Error extracting claims from the token
2024-12-10 07:36:53 - Handling error response: statusCode: 401, message: JWT token has expired: Error extracting claims from the token
2024-12-10 07:38:18 - Handling error response: statusCode: 401, message: JWT token has expired: Error extracting claims from the token
2024-12-10 07:40:33 - Handling error response: statusCode: 401, message: JWT token has expired: Error extracting claims from the token
2024-12-10 07:41:29 - Handling error response: statusCode: 401, message: JWT token has expired: Error extracting claims from the token
2024-12-10 07:45:54 - Handling error response: statusCode: 401, message: JWT token has expired: Error extracting claims from the token
2024-12-10 07:47:12 - Handling error response: statusCode: 401, message: JWT token has expired: Error extracting claims from the token
2024-12-10 07:47:33 - Handling error response: statusCode: 401, message: JWT token has expired: Error extracting claims from the token
2024-12-10 07:48:45 - Handling error response: statusCode: 401, message: JWT token has expired: Error extracting claims from the token
2024-12-10 07:48:59 - Handling error response: statusCode: 401, message: Authorization header is missing or invalid
2024-12-10 07:48:59 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Unable to handle the Spring Security Exception because the response is already committed.] with root cause
org.springframework.security.access.AccessDeniedException: Access Denied
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:98)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.theara.postgres.config.keycloak.JwtRequestKeycloakFilter.doFilterInternal(JwtRequestKeycloakFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-12-10 07:48:59 - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.security.access.AccessDeniedException: Access Denied
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:98)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:91)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:632)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:510)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:453)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:343)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:222)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:308)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-12-10 07:48:59 - Exception Processing [ErrorPage[errorCode=0, location=/error]]
jakarta.servlet.ServletException: Unable to handle the Spring Security Exception because the response is already committed.
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:144)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:91)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:632)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:510)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:453)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:343)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:222)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:308)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.security.access.AccessDeniedException: Access Denied
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:98)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	... 65 common frames omitted
2024-12-10 07:49:11 - Handling error response: statusCode: 401, message: JWT token has expired: Error extracting claims from the token
2024-12-10 07:51:44 - Handling error response: statusCode: 401, message: JWT token has expired: Error extracting claims from the token
2024-12-10 07:52:00 - Handling error response: statusCode: 401, message: JWT token has expired: Error extracting claims from the token
2024-12-10 07:52:48 - Handling error response: statusCode: 401, message: JWT token has expired: Error extracting claims from the token
2024-12-10 07:53:35 - Handling error response: statusCode: 401, message: JWT token has expired: Error extracting claims from the token
2024-12-10 07:54:38 - Handling error response: statusCode: 401, message: JWT token has expired: Error extracting claims from the token
2024-12-10 07:54:39 - Handling error response: statusCode: 401, message: JWT token has expired: Error extracting claims from the token
2024-12-10 07:54:39 - Handling error response: statusCode: 401, message: JWT token has expired: Error extracting claims from the token
2024-12-10 07:55:01 - Handling error response: statusCode: 401, message: JWT token has expired: Error extracting claims from the token
2024-12-10 07:55:18 - Handling error response: statusCode: 401, message: JWT token has expired: Error extracting claims from the token
2024-12-10 07:55:30 - Handling error response: statusCode: 401, message: JWT token has expired: Error extracting claims from the token
2024-12-10 07:55:46 - Handling error response: statusCode: 401, message: JWT token has expired: Error extracting claims from the token
2024-12-10 07:55:47 - Handling error response: statusCode: 401, message: JWT token has expired: Error extracting claims from the token
2024-12-10 08:11:59 - Handling error response: statusCode: 401, message: JWT token has expired: Error extracting claims from the token
2024-12-10 08:12:12 - Handling error response: statusCode: 401, message: JWT token has expired: Error extracting claims from the token
2024-12-10 08:27:08 - Handling error response: statusCode: 401, message: JWT token has expired: Error extracting claims from the token
2024-12-10 08:48:56 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-12-10 08:48:56 - HikariPool-1 - Shutdown initiated...
2024-12-10 08:48:56 - HikariPool-1 - Shutdown completed.
2024-12-10 08:52:22 - HV000001: Hibernate Validator 8.0.1.Final
2024-12-10 08:52:22 - Starting PostgresApplication v0.0.1 using Java 21 with PID 1 (/app/app.jar started by root in /app)
2024-12-10 08:52:22 - The following 1 profile is active: "prod"
2024-12-10 08:52:23 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-12-10 08:52:23 - Finished Spring Data repository scanning in 67 ms. Found 4 JPA repository interfaces.
2024-12-10 08:52:23 - Tomcat initialized with port 9012 (https)
2024-12-10 08:52:23 - Initializing ProtocolHandler ["https-jsse-nio-9012"]
2024-12-10 08:52:23 - Starting service [Tomcat]
2024-12-10 08:52:23 - Starting Servlet engine: [Apache Tomcat/10.1.28]
2024-12-10 08:52:24 - Initializing Spring embedded WebApplicationContext
2024-12-10 08:52:24 - Root WebApplicationContext: initialization completed in 1723 ms
2024-12-10 08:52:24 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-12-10 08:52:24 - HHH000412: Hibernate ORM core version 6.1.6.Final
2024-12-10 08:52:24 - HHH90000021: Encountered deprecated setting [javax.persistence.sharedCache.mode], use [jakarta.persistence.sharedCache.mode] instead
2024-12-10 08:52:24 - HikariPool-1 - Starting...
2024-12-10 08:52:24 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@481ed95c
2024-12-10 08:52:24 - HikariPool-1 - Start completed.
2024-12-10 08:52:24 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2024-12-10 08:52:25 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-12-10 08:52:25 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-12-10 08:52:26 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-12-10 08:52:27 - Starting ProtocolHandler ["https-jsse-nio-9012"]
2024-12-10 08:52:27 - Connector [https-jsse-nio-9012], TLS virtual host [_default_], certificate type [UNDEFINED] configured from keystore [/root/.keystore] using alias [tomcat] with trust store [null]
2024-12-10 08:52:27 - Tomcat started on port 9012 (https) with context path '/'
2024-12-10 08:52:27 - Started PostgresApplication in 6.145 seconds (process running for 7.832)
2024-12-10 08:52:39 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-12-10 08:52:39 - Initializing Servlet 'dispatcherServlet'
2024-12-10 08:52:39 - Completed initialization in 1 ms
